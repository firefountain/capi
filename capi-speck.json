{
  "swagger": "2.0",
  "info": {
    "title": "capi.paw",
    "version": "v0.0.1",
    "description": "# Description of CAPI RESTful API.\n\n![Capi Logo](http://10.4.0.59/capi/Documentation/Assets/img/capi.png \"Capi Logo\")\n\n## O que é a CAPI?\nA Central API (CAPI) é uma API da Universidade Aberta que permiter acedar a vários serviços directamente através de pedidos REST.\n\nNeste momento estão disponiveis as paths para registo e login de clientes e após autenticação CRUD para Active Directory.\n\nEsta API só permite aceder aos serviços após o cliente estar registado e autenticado na mesma. \n\n### Index\n- [Autenticação](#Autenticação)\n\n### Autenticação\nA CAPI utiliza autenticação via JSON Web Token (JWT).\n\nJWT é um padrão aberto documentado pelo [RFC 7519](https://datatracker.ietf.org/doc/html/rfc7519 \"RFC 7519\"), que viabiliza a transferência de informações e garante a sua autenticidade.\n\nUm JWT é divido em três partes separadas por ponto ”.”, um **header**, um **payload** e uma **signature**.\n\n\n  - **Header**\n    - Formato JSON e geralmente, contém o algoritmo de hashing utilizado na assinatura e o tipo de token (JWT)\n\n```json\n{\n  \"typ\": \"JWT\",\n  \"alg\": \"HS256\"\n}\n```\n\n  - **Payload**\n    - O payload de um JWT é também um JSON e que contém as informações relevantes ao assunto, denominadas claims, na estrutura de mapa, ou seja, chave=valor.\n```json\n{\n  \"client_name\": \"teste1\",\n  \"iat\": 1629906752,\n  \"exp\": 1629910352\n}\n```    \n  - **Signature**\n    - Signature é a terceira e última parte do JWT, para que possa ter um token, precisa-se de um Cabeçalho, Corpo, o Algoritmo definido no Cabeçalho, um secret definido pela aplicação.\n\n```json\nHMACSHA256\n  (\n  base64UrlEncode(header) +  \".\" + base64UrlEncode(payload),\n  your-256-bit-secret\n  ) \n```\n - Resultado:\n ```json\neyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbGllbnRfbmFtZSI6InRlc3RlMSIsImlhdCI6MTYyOTkwNjc1MiwiZXhwIjoxNjI5OTEwMzUyfQ.Vskrf57VjUpEvlfLK3dMIlkAIXCcNDTIdbD3n_YOlq8\n```\n\n\n```json http\n{\n  \"method\": \"post\",\n  \"url\": \"http://capi.local:8080/auth/login\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  \"body\": {\n    \"client_name\": \"teste1\",\n    \"password\": \"1234567890\"\n  }\n}\n```\n\n>CONTACT\n>\n>NAME: CAPI\n>URL: https://capi.uab.pt/developer/support\n>Terms of service: https://capi.uab.pt/about/legal/terms/api/",
    "contact": {
      "name": "Nelson Carvalho",
      "email": "nelson.carvalho@uab.pt"
    }
  },
  "host": "capi.local:8080",
  "schemes": [
    "http"
  ],
  "basePath": "/",
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register",
        "description": "Registo de clientes para acesso há CAPI ",
        "operationId": "33e16dde-ba09-4ae8-bf8b-1aac1398920b",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/cliente"
            },
            "description": "",
            "x-examples": {
              "Example": {
                "client_name": "teste3",
                "client_description": "lorem ipsum lorem ipsum",
                "password": "1234567890",
                "active": 1
              }
            }
          },
          {
            "type": "string",
            "in": "header",
            "name": "Content-Type",
            "description": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Criação de cliente com sucesso",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "client_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "client_description": {
                      "type": "string",
                      "minLength": 1
                    },
                    "active": {
                      "type": "string",
                      "minLength": 1
                    },
                    "updated_at": {},
                    "created_at": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id",
                    "client_name",
                    "client_description",
                    "active",
                    "created_at"
                  ]
                },
                "access_token": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "message",
                "user",
                "access_token"
              ],
              "x-examples": {
                "example-1": {
                  "message": "User authenticated successfully",
                  "user": {
                    "id": "11",
                    "client_name": "teste3",
                    "client_description": "lorem ipsum lorem ipsum",
                    "active": "1",
                    "updated_at": null,
                    "created_at": "2021-08-25 16:58:00"
                  },
                  "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbGllbnRfbmFtZSI6InRlc3RlMyIsImlhdCI6MTYyOTkxMjQ1MSwiZXhwIjoxNjI5OTE2MDUxfQ.28SBUsbbo0dJhagix7MlQo9qwYTx_O4kbMd6WQVxJZg"
                }
              }
            },
            "examples": {
              "Example": {
                "message": "User authenticated successfully",
                "user": {
                  "id": "11",
                  "client_name": "teste3",
                  "client_description": "lorem ipsum lorem ipsum",
                  "active": "1",
                  "updated_at": null,
                  "created_at": "2021-08-25 16:58:00"
                },
                "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbGllbnRfbmFtZSI6InRlc3RlMyIsImlhdCI6MTYyOTkxMjQ1MSwiZXhwIjoxNjI5OTE2MDUxfQ.28SBUsbbo0dJhagix7MlQo9qwYTx_O4kbMd6WQVxJZg"
              }
            },
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "application/json"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "password"
              ],
              "x-examples": {
                "example-1": {
                  "password": "The password field is required."
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login",
        "description": "Autenticação de clientes na CAPI, para acesso a novos pontos da API.",
        "operationId": "6f2707d7-14b0-4fde-bc6d-b30ea52dded6",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "required": false,
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "client_name": "teste1",
                  "password": "1234567890"
                }
              },
              "properties": {
                "client_name": {
                  "type": "string",
                  "minLength": 1
                },
                "password": {
                  "type": "string",
                  "minLength": 8
                }
              },
              "required": [
                "client_name",
                "password"
              ]
            },
            "in": "body",
            "name": "body",
            "description": "Identificação de cliente e respectiva password",
            "x-examples": {
              "Example": {
                "client_name": "teste1",
                "password": "1234567890"
              }
            }
          },
          {
            "type": "string",
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Resultado de uma correcta autenticação\n",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "client_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "client_description": {
                      "type": "string",
                      "minLength": 1
                    },
                    "active": {
                      "type": "string",
                      "minLength": 1
                    },
                    "updated_at": {},
                    "created_at": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id",
                    "client_name",
                    "client_description",
                    "active",
                    "created_at"
                  ]
                },
                "access_token": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "message",
                "user",
                "access_token"
              ],
              "x-examples": {
                "example-1": {
                  "message": "User authenticated successfully",
                  "user": {
                    "id": "2",
                    "client_name": "teste1",
                    "client_description": "lorem ipsum lorem ipsum",
                    "active": "1",
                    "updated_at": null,
                    "created_at": "2021-08-10 23:33:02"
                  },
                  "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbGllbnRfbmFtZSI6InRlc3RlMSIsImlhdCI6MTYyOTkwNjc1MiwiZXhwIjoxNjI5OTEwMzUyfQ.bFF6-Guw1iVryVuE1Q_o4W3yXObED96jmq0TCZ4tbZc"
                }
              }
            },
            "examples": {
              "Example": {
                "message": "User authenticated successfully",
                "user": {
                  "id": "2",
                  "client_name": "teste1",
                  "client_description": "lorem ipsum lorem ipsum",
                  "active": "1",
                  "updated_at": null,
                  "created_at": "2021-08-10 23:33:02"
                },
                "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbGllbnRfbmFtZSI6InRlc3RlMSIsImlhdCI6MTYyOTkwNjc1MiwiZXhwIjoxNjI5OTEwMzUyfQ.bFF6-Guw1iVryVuE1Q_o4W3yXObED96jmq0TCZ4tbZc"
              }
            }
          },
          "400": {
            "description": "Credenciais incorrectas ou password curta\n",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "password"
              ],
              "x-examples": {
                "example-1": {
                  "password": "Invalid login credentials provided"
                }
              }
            },
            "examples": {
              "Short Password": {
                "password": "The password field must be at least 8 characters in length."
              },
              "Password Required": {
                "password": "The password field is required."
              }
            }
          }
        }
      }
    },
    "/ad": {
      "get": {
        "summary": "GET all Users",
        "description": "Listar todos os utilizadores da Active Directory",
        "operationId": "a55a202d-bb62-4bdb-ac03-13f0e5e8b642",
        "responses": {
          "default": {
            "description": "no response description was provided for this operation"
          }
        },
        "security": [
          {
            "JWT Auth": []
          }
        ],
        "parameters": []
      },
      "post": {
        "summary": "Create User in AD",
        "description": "Criação de utilizador na Active Directory.",
        "operationId": "9af9db24-488c-4778-b970-215bb36f1e4f",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "{\"c\":\"NO\",\"givenName\":\"Pilar\",\"middleName\":\"b\",\"sn\":\"Leal\",\"department\":\"Filmes\",\"employeeID\":\"66388954\",\"mail\":\"Adriana_Vicente@example.com\",\"memberOf\":\"123123\",\"title\":\"Supervisor\",\"wWWHomePage\":\"https://mara.net\",\"description\":\"Dynamic\",\"extensionAttribute5\":\"Adriana_Amorim@example.com\"}"
            },
            "in": "body",
            "name": "body"
          }
        ],
        "responses": {
          "default": {
            "description": "no response description was provided for this operation"
          }
        },
        "security": [
          {
            "JWT Auth": []
          }
        ]
      }
    },
    "/ad/Admin/{samaccountname}": {
      "get": {
        "summary": "GET a single user by samaccountname",
        "description": "Listar dados de um utilizador da Active Directory identificado por samaccountname",
        "operationId": "18f6764b-35db-4109-9530-aa368c840c82",
        "responses": {
          "default": {
            "description": "no response description was provided for this operation"
          }
        },
        "security": [
          {
            "JWT Auth": []
          }
        ],
        "parameters": []
      },
      "parameters": [
        {
          "type": "string",
          "name": "samaccountname",
          "in": "path",
          "required": true,
          "description": "samaccountname of user in Active Directory"
        }
      ]
    },
    "/ad/{samaccountname}": {
      "delete": {
        "summary": "Destroy a single user by ID",
        "description": "Apagar um utilizador da Active Directory",
        "operationId": "abda8cdc-8dd9-4659-8aee-22fb91c05573",
        "responses": {
          "default": {
            "description": "no response description was provided for this operation"
          }
        },
        "security": [
          {
            "JWT Auth": []
          }
        ],
        "parameters": []
      },
      "parameters": [
        {
          "type": "string",
          "name": "samaccountname",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ad/guest": {
      "put": {
        "summary": "UPDATE user by samaccountname",
        "description": "Actualizar dados de um utilizador com identifação por samaccountname",
        "operationId": "07ff5bbd-af09-4d13-82ce-8c463aba363e",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "{\"name\":\"1\"}"
            },
            "in": "body",
            "name": "body"
          }
        ],
        "responses": {
          "default": {
            "description": "no response description was provided for this operation"
          }
        },
        "security": [
          {
            "JWT Auth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "authorizationUrl": "https://capi.local:8080/auth/login",
      "flow": "implicit",
      "scopes": {
        "basic": "to read a user's profile info and media (granted by default)",
        "comments": "to post and delete comments on a user's behalf",
        "follower_list": "to read the list of followers and followed-by users",
        "likes": "to like and unlike media on a user's behalf",
        "public_content": "to read any public profile info and media on a userâ€™s behalf",
        "relationships": "to follow and unfollow accounts on a user's behalf"
      },
      "type": "oauth2"
    }
  },
  "tags": [
    {
      "name": "Active Directory"
    }
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "oauth_2_auth": []
    }
  ],
  "definitions": {
    "cliente": {
      "description": "Model of CAPI client creation\n",
      "type": "object",
      "properties": {
        "client_name": {
          "type": "string",
          "minLength": 1
        },
        "client_description": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        },
        "active": {
          "type": "number"
        }
      },
      "required": [
        "client_name",
        "client_description",
        "password",
        "active"
      ],
      "x-examples": {
        "Example": {
          "client_name": "teste3",
          "client_description": "lorem ipsum lorem ipsum",
          "password": "1234567890",
          "active": 1
        }
      }
    }
  },
  "value": "{\n  \"method\": \"get\",\n  \"url\": \"http://capi.local:8080/auth/login\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  \"body\": {\n    \"client_name\": \"string\",\n    \"password\": \"string\"\n  }\n}"
}